// A Control unit for multi cycle processor

`include "./StateParameters.vh"

`define parameter [4:0] IF = 4'b0000;

module MultiCycleControlUnit(
    input clk,
    input [6:0] OpCode,
    input [2:0] funct3,
    input [6:0] funct7,
    input zr,
    input gt,
    output reg PCWrite,
    output reg AdrSrc,
    output reg MemWrite,
    output reg IRWrite,
    output reg [1:0] ResultSrc,
    output reg [4:0] ALUControl,
    output reg [1:0] ALUSrcA,
    output reg [1:0] ALUSrcB,
    output reg [1:0] ImmSrc,
    output reg RegWrite
);

reg [4:0] current_state, next_state;

initial current_state = IF;

always @(*) begin
    case (current_state)
        IF : begin
            PCWrite = 1;
            AdrSrc = 0;
            MemWrite = 0;
            IRWrite = 1;
            ResultSrc = 2'b10; // Direct from ALUOut to update PC

        end
        ID : begin

        end
        MemAdr : begin

        end
        MemRead : begin

        end
        MemWB : begin

        end
        MemWrite : begin

        end
        ExR : begin

        end
        ALUWB : begin

        end
        ExI : begin

        end
        JAL : begin

        end
        BEQ : begin

        end 
        default: begin
        end
    endcase
end

endmodule